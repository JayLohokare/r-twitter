{
    "collab_server" : "",
    "contents" : "library(twitteR)\nlibrary(stringr)\nlibrary(tm)\nrequire('sentR')\nlibrary(plyr)\n\nprojectDir = getwd()\ndataDir = file.path(projectDir, 'data')\nhu.liu.pos = scan(file.path(dataDir, 'opinion-lexicon-English', 'positive-words.txt'), what='character', comment.char=';')\nhu.liu.neg = scan(file.path(dataDir, 'opinion-lexicon-English', 'negative-words.txt'), what='character', comment.char=';')\n\npos.words = c(hu.liu.pos, 'upgrade')\nneg.words = c(hu.liu.neg, 'wtf', 'wait', 'waiting', 'epicfail', 'mechanical')\n\n\n\napi_key = 'RUmPyAIYfK9eMzIavtopngC21'\napi_secret = 'pHIFNMYpzqzIgxnHAXdrXAU75fCg1foTruHCV3lkM8BGwTyBBM'\naccess_token = '2405586890-T11ug4N2p1qBFNBuNHLnc63zEsOw5vQUmqtcFAP'\naccess_token_secret = '59Qd4Ew50ssNeYcNfrT6HxvXUQ3ATI4A56PGLFpeMTFkz'\n\nsetup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)\n\n#tweet <- getUser(\"JayLohokare\")\n\n#twitter_number_of_followers <-tweet$getFollowersCount()\n#print(twitter_number_of_followers)\n\n#twitter_number_of_friends<-tweet$getFriendsCount()\n#print(twitter_number_of_friends)\n\n#twitter_location<-tweet$getLocation()\n#print(twitter_location)\n\n#twitter_verified<-tweet$getVerified()\n#print(twitter_verified)\n\n#twitter_description<-tweet$getDescription()\n#print(twitter_description)\n\n#twitter_lang<-tweet$getLang()\n#print(twitter_lang)\n\n#hashTag_search <- searchTwitter(\"#India\", n=10, lang=\"en\")\n#print(hashTag_search)\n\nname_mentioned <- searchTwitter(\"from:JayLohokare\", n = 10)\n#print(name_mentioned)\n\n#twitter_tweets_timeline<-userTimeline(\"JayLohokare\")\n#print(twitter_tweets_timeline)\n\n\n\n\n############################Start of Sentiment calculation###############################\n\n#https://www.credera.com/blog/business-intelligence/twitter-analytics-using-r-part-2-create-word-cloud/\n#https://github.com/jeffreybreen/twitter-sentiment-analysis-tutorial-201107\n\ntweets.text <- sapply(name_mentioned, function(x) x$getText())\n# Replace blank space (“rt”)\ntweets.text <- gsub(\"rt\", \"\", tweets.text)\n# Replace @UserName\n#tweets.text <- gsub(\"@\\\\w+\", \"\", tweets.text)\n# Remove punctuation\ntweets.text <- gsub(\"[[:punct:]]\", \"\", tweets.text)\n# Remove links\n#tweets.text <- gsub(\"http\\\\w+\", \"\", tweets.text)\n# Remove tabs\ntweets.text <- gsub(\"[ |\\t]{2,}\", \"\", tweets.text)\n# Remove blank spaces at the beginning\ntweets.text <- gsub(\"^ \", \"\", tweets.text)\n# Remove blank spaces at the end\ntweets.text <- gsub(\" $\", \"\", tweets.text)\n#convert all text to lower case\ntweets.text <- tolower(tweets.text)\n#create corpus\ntweets.text.corpus <- Corpus(VectorSource(tweets.text))\n#clean up by removing stop words\ntweets.text.corpus <- tm_map(tweets.text.corpus, function(x)removeWords(x,stopwords()))\n\n#positive <- c('happy', 'well-off', 'yes','appreciate', 'fortunate',  'success', 'successful', 'good', 'happiness', 'win', 'enjoy')\n#negative <- c('sad', 'killed','against', 'afraid', 'sorry','no', 'not', 'depressed', 'loss', 'lost', 'bad', 'miserable', 'terrible', 'down', 'why')\n\nlength <- length (tweets.text)\nsentiment_score <-0\n\nfor (i in 1:length){\n  all_tweets_string <- tweets.text[[i]]\n\n  # split into words. str_split is in the stringr package\n  word.list = str_split(all_tweets_string, '\\\\s+')\n  # sometimes a list() is one level of hierarchy too much\n  words = unlist(word.list)\n  \n  # compare our words to the dictionaries of positive & negative terms\n  pos.matches = match(words, pos.words)\n  neg.matches = match(words, neg.words)\n  \n  # match() returns the position of the matched term or NA\n  # we just want a TRUE/FALSE:\n  pos.matches = !is.na(pos.matches)\n  neg.matches = !is.na(neg.matches)\n  \n  # and conveniently enough, TRUE/FALSE will be treated as 1/0 by sum():\n  score = sum(pos.matches) - sum(neg.matches)\n  sentiment_score <- sentiment_score + score\n  \n  print(score)\n  \n  #out <- classify.aggregate(all_tweets_string, positive, negative)\n  #print(out$score)\n  \n}\nprint(paste0(\"Final score is: \", sentiment_score/length))\n\n##############################End of Sentiment calculation#############################\n\n\n\n",
    "created" : 1500829342414.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2909321007",
    "id" : "2BD99CED",
    "lastKnownWriteTime" : 1500829458,
    "last_content_update" : -2147483648,
    "path" : "I:/Skyline Labs/Projects/Twitter Trial/Twitter trial.R",
    "project_path" : "Twitter trial.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}